# Generated by Django 4.2.7 on 2025-05-28 01:16

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ActorDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=255, verbose_name='Полное имя')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('biography', models.TextField(blank=True, verbose_name='Биография')),
                ('photo_url', models.URLField(blank=True, verbose_name='URL фото')),
            ],
            options={
                'verbose_name': 'Актер/Режиссер',
                'verbose_name_plural': 'Актеры/Режиссеры',
                'ordering': ['full_name'],
            },
        ),
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
            ],
            options={
                'verbose_name': 'Подборка',
                'verbose_name_plural': 'Подборки',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
            ],
            options={
                'verbose_name': 'Жанр',
                'verbose_name_plural': 'Жанры',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MovieTVShow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('type', models.CharField(choices=[('movie', 'Фильм'), ('tv_show', 'Сериал')], max_length=10, verbose_name='Тип')),
                ('release_date', models.DateField(verbose_name='Дата выхода')),
                ('duration', models.IntegerField(blank=True, null=True, verbose_name='Продолжительность (мин)')),
                ('seasons_count', models.IntegerField(blank=True, null=True, verbose_name='Количество сезонов')),
                ('episodes_count', models.IntegerField(blank=True, null=True, verbose_name='Количество эпизодов')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='Дата завершения')),
                ('status', models.CharField(blank=True, choices=[('ongoing', 'Выходит'), ('finished', 'Завершен'), ('cancelled', 'Отменен')], max_length=20, verbose_name='Статус')),
                ('age_restriction', models.CharField(blank=True, max_length=10, verbose_name='Возрастное ограничение')),
                ('poster_url', models.URLField(blank=True, verbose_name='URL постера')),
                ('country', models.CharField(blank=True, max_length=100, verbose_name='Страна')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'Фильм/Сериал',
                'verbose_name_plural': 'Фильмы/Сериалы',
                'ordering': ['-release_date'],
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_text', models.TextField(verbose_name='Текст отзыва')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('movie_tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='movies.movietvshow', verbose_name='Фильм/Сериал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Отзыв',
                'verbose_name_plural': 'Отзывы',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MovieTVShowActorDirector',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('actor', 'Актер'), ('director', 'Режиссер')], max_length=10, verbose_name='Роль')),
                ('character_name', models.CharField(blank=True, max_length=255, verbose_name='Имя персонажа')),
                ('actor_director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movie_roles', to='movies.actordirector', verbose_name='Актер/Режиссер')),
                ('movie_tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='actor_director_roles', to='movies.movietvshow', verbose_name='Фильм/Сериал')),
            ],
            options={
                'verbose_name': 'Роль в фильме/сериале',
                'verbose_name_plural': 'Роли в фильмах/сериалах',
                'unique_together': {('movie_tvshow', 'actor_director', 'role')},
            },
        ),
        migrations.AddField(
            model_name='movietvshow',
            name='actors_directors',
            field=models.ManyToManyField(related_name='movies', through='movies.MovieTVShowActorDirector', to='movies.actordirector', verbose_name='Актеры/Режиссеры'),
        ),
        migrations.AddField(
            model_name='movietvshow',
            name='genres',
            field=models.ManyToManyField(related_name='movies', to='movies.genre', verbose_name='Жанры'),
        ),
        migrations.CreateModel(
            name='CollectionItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('collection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='movies.collection', verbose_name='Подборка')),
                ('movie_tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_items', to='movies.movietvshow', verbose_name='Фильм/Сериал')),
            ],
            options={
                'verbose_name': 'Элемент подборки',
                'verbose_name_plural': 'Элементы подборок',
                'unique_together': {('collection', 'movie_tvshow')},
            },
        ),
        migrations.AddField(
            model_name='collection',
            name='movies',
            field=models.ManyToManyField(related_name='collections', through='movies.CollectionItem', to='movies.movietvshow', verbose_name='Фильмы/Сериалы'),
        ),
        migrations.AddField(
            model_name='collection',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collections', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь'),
        ),
        migrations.CreateModel(
            name='UserWatchlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('to_watch', 'Буду смотреть'), ('watching', 'Смотрю'), ('watched', 'Просмотрено')], default='to_watch', max_length=20, verbose_name='Статус просмотра')),
                ('progress', models.IntegerField(blank=True, null=True, verbose_name='Прогресс (эпизод)')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата добавления')),
                ('movie_tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='in_watchlists', to='movies.movietvshow', verbose_name='Фильм/Сериал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='watchlist', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Элемент списка просмотра',
                'verbose_name_plural': 'Элементы списка просмотра',
                'ordering': ['-added_at'],
                'unique_together': {('user', 'movie_tvshow')},
            },
        ),
        migrations.CreateModel(
            name='UserGenrePreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_preferences', to='movies.genre', verbose_name='Жанр')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='genre_preferences', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Предпочтение пользователя по жанру',
                'verbose_name_plural': 'Предпочтения пользователей по жанрам',
                'unique_together': {('user', 'genre')},
            },
        ),
        migrations.CreateModel(
            name='ReviewVote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vote_type', models.CharField(choices=[('helpful', 'Полезный'), ('not_helpful', 'Бесполезный')], max_length=20, verbose_name='Тип голоса')),
                ('voted_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата голосования')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='movies.review', verbose_name='Отзыв')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review_votes', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Голос за отзыв',
                'verbose_name_plural': 'Голоса за отзывы',
                'unique_together': {('review', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason_code', models.CharField(blank=True, max_length=50, verbose_name='Код причины')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('movie_tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='movies.movietvshow', verbose_name='Фильм/Сериал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Рекомендация',
                'verbose_name_plural': 'Рекомендации',
                'ordering': ['-created_at'],
                'unique_together': {('user', 'movie_tvshow')},
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating_value', models.IntegerField(choices=[(1, 1), (2, 2), (3, 3), (4, 4), (5, 5), (6, 6), (7, 7), (8, 8), (9, 9), (10, 10)], verbose_name='Оценка')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('movie_tvshow', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='movies.movietvshow', verbose_name='Фильм/Сериал')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Оценка',
                'verbose_name_plural': 'Оценки',
                'unique_together': {('user', 'movie_tvshow')},
            },
        ),
    ]
